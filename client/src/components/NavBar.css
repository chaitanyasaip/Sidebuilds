/* NavBar.css - Simplified for theme consistency */

/* 
  The main navbar structure is now primarily handled by Chakra UI components in NavBar.js 
  and styled via client/src/theme.js and CSS variables in client/src/index.css.
  This file should only contain styles that are NOT easily achievable via the Chakra theme
  or are for very specific custom elements within the NavBar.
*/

/* Example: Custom underline for active NavItem (if not handled by Chakra Link styles) */
/* This was in NavItem in NavBar.js, if we want a custom underline not from Chakra Link directly */
/*
.nav-item-active-underline::after {
  content: '';
  position: absolute;
  bottom: -2px; 
  left: 50%;
  transform: translateX(-50%);
  width: 20px;
  height: 3px;
  background-color: var(--primary-color);
  border-radius: 3px;
}
*/

/* Mobile menu toggle icon specific styles (hamburger lines) if not using Chakra Icon */
/* The existing styles for .mobile-menu-toggle and .mobile-menu-toggle.open span 
   for the hamburger animation can largely remain if they are for a custom icon implementation.
   However, ensure their colors use theme variables if needed.
   The <Box> implementation in NavBar.js for the hamburger seems to handle this directly now.
*/

/* Minimal styles for .nav-logo if needed, but Text component in NavBar.js should handle most */
/*
.nav-logo { */
  /* text-decoration: none; */ /* Handled by Chakra Link component */
  /* color: var(--text-color); */ /* Handled by Text component color prop *//*
}*/

/* Styles for .nav-menu links if not fully covered by NavItem component logic in NavBar.js */
.nav-menu a {
  /*font-size: var(--secondary-text-size);*/ /* Consider setting in NavItem component props if possible */
  /*color: var(--secondary-text);*/ /* Default NavItem link color in NavBar.js is now var(--secondary-text) */
  text-decoration: none;
  padding: 8px 12px; /* Consistent padding */
  border-radius: var(--card-radius); /* Use theme card radius */
  font-weight: 500;
  transition: color var(--transition-speed) ease, background-color var(--transition-speed) ease;
}

.nav-menu a:hover {
  color: var(--text-color);
  background-color: var(--hover-bg); /* Use theme hover background */
}

.nav-menu a.active {
  color: var(--primary-color);
  font-weight: 600;
  /* background-color: transparent; */ /* Active state might not need a different background */
}

/* Keep mobile menu animation styles if they are for a custom hamburger icon */
.mobile-menu-toggle span {
  display: block;
  width: 24px; /* Consistent with Box in NavBar.js */
  height: 2px; /* Consistent with Box in NavBar.js */
  margin: 4px 0; /* Consistent with Box in NavBar.js */
  position: relative;
  background: var(--text-color); /* Use theme text color for hamburger lines */
  border-radius: 3px;
  z-index: 1;
  transform-origin: center center;
  transition: transform 0.3s ease,
              opacity 0.3s ease;
}

.mobile-menu-toggle.open span:nth-child(1) {
  transform: translateY(6px) rotate(45deg);
}

.mobile-menu-toggle.open span:nth-child(2) {
  opacity: 0;
  transform: scale(0);
}

.mobile-menu-toggle.open span:nth-child(3) {
  transform: translateY(-6px) rotate(-45deg);
}

/* Any other highly specific custom styles for NavBar that don't fit the theme system can go here. */
/* But the goal is to minimize this file. */

.navbar {
  background: #000000;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: calc(var(--header-height) + 30px);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  border-bottom: none;
  transition: all 0.3s ease;
  padding: 20px 0;
}

/* Scrolled state - adds shadow and changes background */
.navbar.scrolled {
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  background: #000000;
  border-bottom: none;
}

.navbar-container {
  max-width: var(--max-width);
  width: 90%;
  margin: 0 auto;
  padding: 0 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
  box-sizing: border-box;
  background-color: #000000;
}

/* Logo styling */
.logo-text {
  font-size: 1.6rem;
  letter-spacing: 1px;
  font-weight: 700;
  background-color: #000000;
}

.nav-logo:hover {
  transform: translateY(-2px);
}

.nav-right {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
  background-color: #000000;
}

/* Navigation menu */
.nav-menu {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  background-color: #000000;
}

/* Special buttons styling */
.login-button, .register-button {
  font-weight: 600;
  background-color: #000000;
}

.register-button {
  background-color: var(--primary-color);
  color: white !important;
  padding: 8px 16px !important;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(var(--primary-color-rgb), 0.3);
}

.register-button:hover {
  background-color: var(--primary-color);
  opacity: 0.9;
  transform: translateY(-2px);
}

.register-button {
  box-shadow: 0 2px 8px rgba(var(--primary-color-rgb), 0.5);
}

/* User menu styling */
.user-menu {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-left: 10px;
  background-color: #000000;
}

.user-avatar {
  display: none;
}

.logout-button {
  /* Inherit general nav link styles for consistency */
  font-size: 0.65rem;
  color: var(--danger-color, #e74c3c); /* Use a variable or fallback to red */
  text-decoration: none;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 6px;
  padding: 8px 12px;
  border-radius: 8px;
  font-weight: 500;
  position: relative;
  background-color: #000000; /* Ensure transparent background */
  border: none; /* Remove any default button border */
  cursor: pointer; /* Ensure it looks clickable */
}

.logout-button:hover {
  color: var(--danger-color-darker, #c0392b); /* Darker red on hover */
  background: var(--danger-hover-bg, rgba(231, 76, 60, 0.1)); /* Light red hover background */
  transform: translateY(-2px);
}

/* Ensure icons within the button also get the red color */
.logout-button svg {
  stroke: var(--danger-color, #e74c3c);
}

.logout-button:hover svg {
  stroke: var(--danger-color-darker, #c0392b);
}

.user-avatar:hover {
  transform: scale(1.05);
}

/* Mobile menu toggle button */
.mobile-menu-toggle {
  display: none;
  background: #000000;
  border: none;
  cursor: pointer;
  padding: 10px;
  z-index: 1100;
  position: relative;
}

/* Mobile navigation adjustments */
@media (max-width: 768px) {
  .navbar {
    border-bottom: none;
    padding: 15px 0;
  }
  
  .navbar.scrolled {
    border-bottom: none;
  }
  
  .navbar-container {
    width: 95%;
    padding: 0 1rem;
  }
  
  .logo-text {
    font-size: 1.3rem;
    letter-spacing: 1px;
  }
  
  .nav-logo {
    left: 0;
  }
  
  .mobile-menu-toggle {
    display: block;
  }
  
  .nav-right {
    position: fixed;
    top: 0;
    right: -100%;
    width: 75%;
    max-width: 300px;
    height: 100vh;
    background: #000000;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 5rem 2rem 2rem;
    transition: right 0.3s ease;
    box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
    z-index: 1000;
  }
  
  .nav-right {
    box-shadow: -5px 0 15px rgba(0, 0, 0, 0.3);
  }
  
  .nav-right.open {
    right: 0;
  }
  
  .nav-menu {
    flex-direction: column;
    align-items: flex-start;
    width: 100%;
    gap: 0.5rem;
  }
  
  .nav-menu a {
    width: 100%;
    padding: 12px;
    font-size: 1rem;
    background-color: #000000;
  }
  
  .nav-menu a.active::after {
    display: none;
  }
  
  .nav-menu a.active {
    background-color: rgba(var(--primary-color-rgb), 0.1);
  }
  
  .user-menu {
    display: none;
  }
  
  .user-avatar {
    display: none;
  }
  
  .logout-button {
    width: 100%;
    justify-content: center;
    padding: 12px !important;
    background-color: #000000;
  }
  
  .register-button {
    width: 100%;
    margin-top: 0.5rem;
    justify-content: center;
  }
} 